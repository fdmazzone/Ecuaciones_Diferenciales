## -*- encoding: utf-8 -*-
# This file was *autogenerated* from the file Uni_Simetrias.sagetex.sage
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_18 = Integer(18); _sage_const_306 = Integer(306)## This file (Uni_Simetrias.sagetex.sage) was *autogenerated* from Uni_Simetrias.tex with sagetex.sty version 2012/01/16 v2.3.3-69dcb0eb93de.
import sagetex
_st_ = sagetex.SageTeXProcessor('Uni_Simetrias', version='2012/01/16 v2.3.3-69dcb0eb93de', version_check=True)
_st_.blockbegin()
try:
 from sympy import *
 x=symbols('x')
 y=Function('y')(x)
 r=sqrt(x**_sage_const_2 +y**_sage_const_2 )
 theta=atan(y/x)
 Expr2=r.diff()/theta.diff()
 Expr3=Expr2.subs(y.diff(),\
 (y**_sage_const_3 +x**_sage_const_2 *y-x-y)/(x**_sage_const_3 +x*y**_sage_const_2 -x+y))
 r,theta=symbols('r,theta',positive=True)
 Expr4=Expr3.subs([(y,r*sin(theta)),\
 (x,r*cos(theta))])
 Expr5=simplify(Expr4)
except:
 _st_.goboom(_sage_const_18 )
_st_.blockend()
try:
 _st_.inline(_sage_const_0 , latex(powsimp(Expr5)))
except:
 _st_.goboom(_sage_const_3 )
_st_.blockbegin()
try:
 reset()
except:
 _st_.goboom(_sage_const_306 )
_st_.blockend()
try:
 _st_.commandline(_sage_const_0 , r"""
sage: G=SymmetricGroup(5)
sage: sigma=G([(1,2,3),(4,5)])
sage: sigma^2
sage: sigma^3
sage: sigma^6
sage: G.order()
sage: H=G.subgroup([sigma])
sage: H.order()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_11 )
try:
 _st_.commandline(_sage_const_1 , r"""
sage: H.list()
sage: H.is_normal()
sage: G1=DihedralGroup(3)
sage: G1[-2]
sage: H1=G1.subgroup(G1[-2])
sage: H1.is_normal()
sage: G1.quotient(H1)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_10 )
_st_.blockbegin()
try:
 from sympy import *
 x,theta=symbols('x,theta')
 y=Function('y')(x)
 xi=cos(theta)*x-sin(theta)*y
 eta=-sin(theta)*x+cos(theta)*y
 Expr2=eta.diff(x)/xi.diff(x)
 Expr3=Expr2.subs(y.diff(),\
 (y**_sage_const_3 +x**_sage_const_2 *y-x-y)/(x**_sage_const_3 +x*y**_sage_const_2 -x+y))
 xi,eta=symbols('xi,eta')
 Expr4=Expr3.subs([(y, -sin(theta)*xi+cos(theta)*eta),\
 (x,cos(theta)*xi+sin(theta)*eta)])
 Expr5=simplify(Expr4)
 Expr6=simplify(Expr5)
 Expr7=Expr6.subs([(sin(_sage_const_2 *theta + pi/_sage_const_4 ),sin(_sage_const_2 *theta)*sqrt(_sage_const_2 )+cos(_sage_const_2 *theta)*sqrt(_sage_const_2 ))  , (cos(_sage_const_2 *theta),_sage_const_1 +(cos(theta))**_sage_const_2 ),(sin(_sage_const_2 *theta),_sage_const_1 -(cos(theta))**_sage_const_2 )])
except:
 _st_.goboom(_sage_const_18 )
_st_.blockend()
try:
 _st_.inline(_sage_const_1 , latex(simplify(Expr7)))
except:
 _st_.goboom(_sage_const_3 )
_st_.endofdoc()
