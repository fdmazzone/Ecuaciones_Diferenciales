## This file (Uni3.sage) was *autogenerated* from the file Uni3.tex.
import sagetex
_st_ = sagetex.SageTeXProcessor('Uni3')
_st_.blockbegin()
try:
 from sympy import *
 x,y,y_n=symbols('x,y,y_n')
 y=Function('y')(x)
 y_n=Function('y_n')(x)
 y=exp(y_n)/x
 eq=Eq(y.diff(x)-(ln(x*y))**2*x*y+y/x,0)
 simplify(eq)
except:
 _st_.goboom(310)
_st_.blockend()
try:
 _st_.inline(0, simplify(eq))
except:
 _st_.goboom(312)
_st_.blockbegin()
try:
 from sympy import *
 x,x_n=symbols('x,x_n')
 x_n=acos(x)
 y=Function('y')(x_n)
 Ecuacion=-y.diff()+1/(sqrt(1-x**2))*y
except:
 _st_.goboom(357)
_st_.blockend()
try:
 _st_.inline(1, simplify(Ecuacion))
except:
 _st_.goboom(359)
_st_.blockbegin()
try:
 from sympy import *
 x=symbols('x')
 y=Function('y')(x)
 r=sqrt(x**2+y**2)
 theta=atan(y/x)
 Expr2=r.diff(x)/theta.diff(x)
 Expr3=Expr2.subs(y.diff(x),\
 (y**3+x**2*y-x-y)/(x**3+x*y**2-x+y))
 r,theta=symbols('r,theta',positive=True)
 Expr4=Expr3.subs([(y,r*sin(theta)),\
 (x,r*cos(theta))])
 Expr5=simplify(Expr4)
except:
 _st_.goboom(394)
_st_.blockend()
try:
 _st_.inline(2, powsimp(Expr5))
except:
 _st_.goboom(399)
try:
 _st_.inline(2, powsimp(Expr5))
except:
 _st_.goboom(399)
try:
 _st_.inline(2, powsimp(Expr5))
except:
 _st_.goboom(399)
try:
 _st_.inline(2, powsimp(Expr5))
except:
 _st_.goboom(399)
_st_.blockbegin()
try:
 reset()
except:
 _st_.goboom(416)
_st_.blockend()
try:
 _st_.inline(3, w[0].simplify_full())
except:
 _st_.goboom(431)
try:
 _st_.inline(4, w[1].simplify_full())
except:
 _st_.goboom(431)
_st_.blockbegin()
try:
 reset()
except:
 _st_.goboom(483)
_st_.blockend()
_st_.blockbegin()
try:
 from sympy import *
 T=lambda x,y,epsilon:  Matrix([x+epsilon,y])
 x,y,epsilon1,epsilon2=\
 symbols('x,y,epsilon1,epsilon2')
 PropGrupo=T(T(x,y,epsilon1)[0],\
 T(x,y,epsilon1)[1],epsilon2)-\
 T(x,y,epsilon1+epsilon2)
except:
 _st_.goboom(612)
_st_.blockend()
try:
 _st_.inline(5, PropGrupo)
except:
 _st_.goboom(614)
_st_.blockbegin()
try:
 from sympy import *
 x,y,epsilon,epsilon1,epsilon2=\
 symbols('x,y,epsilon,epsilon1,epsilon2')
 T=Matrix([x+epsilon,y])
 PropGrupo=T.subs([(\
 x,T.subs(epsilon,epsilon1)[0]),\
 (1,T.subs(epsilon,epsilon1)[1]),\
 (epsilon,epsilon2)\
 ])\
 -T.subs(epsilon,epsilon1+epsilon2)
 
except:
 _st_.goboom(631)
_st_.blockend()
try:
 _st_.inline(6, PropGrupo)
except:
 _st_.goboom(633)
_st_.blockbegin()
try:
 from sympy import *
 x,theta=symbols('x,theta')
 y=Function('y')(x)
 x_n=cos(theta)*x-sin(theta)*y
 y_n=sin(theta)*x+cos(theta)*y
 Expr2=y_n.diff(x)/x_n.diff(x)
 Expr3=Expr2.subs(y.diff(),\
 (y**3+x**2*y-x-y)/(x**3+x*y**2-x+y))
 x_n,y_n=symbols('x_n,y_n')
 Expr4=Expr3.subs([(y, -sin(theta)*x_n+cos(theta)*y_n),\
 (x,cos(theta)*x_n+sin(theta)*y_n)])
 Expr5=simplify(Expr4)
except:
 _st_.goboom(800)
_st_.blockend()
_st_.blockbegin()
try:
 
 Expr6=Expr5.subs(sin(2*theta + pi/4),\
 sin(2*theta)*sqrt(2)+cos(2*theta)*sqrt(2))
 Expr7=Expr6.subs(cos(2*theta),\
 1+(cos(theta))**2   )
 Expr8=Expr7.subs(cos(2*theta),\
 1+(cos(theta))**2)
 Expr9=Expr8.subs(sin(2*theta),\
 1-(cos(theta))**2)
except:
 _st_.goboom(815)
_st_.blockend()
try:
 _st_.inline(7, simplify(Expr9))
except:
 _st_.goboom(817)
try:
 _st_.inline(7, simplify(Expr9))
except:
 _st_.goboom(817)
try:
 _st_.inline(7, simplify(Expr9))
except:
 _st_.goboom(817)
try:
 _st_.inline(7, simplify(Expr9))
except:
 _st_.goboom(817)
_st_.blockbegin()
try:
 reset()
except:
 _st_.goboom(925)
_st_.blockend()
_st_.blockbegin()
try:
 x,y,epsilon = var('x,y,epsilon')
 x_n=cos(epsilon)*x-sin(epsilon)*y
 y_n=sin(epsilon)*x+cos(epsilon)*y
 xi=x_n.diff(epsilon)(epsilon=0)
 eta=y_n.diff(epsilon)(epsilon=0)
 p=plot([])
 for x_abs in srange(0,1,.2):
     p+=parametric_plot([x_n(x=x_abs,y=0),\
 y_n(x=x_abs,y=0)], (epsilon,0,2*pi))
 p+= plot_vector_field((xi,eta),(x,-1,1),\
 (y,-1,1))
except:
 _st_.goboom(940)
_st_.blockend()
try:
 _st_.plot(0, format='notprovided', _p_=p)
except:
 _st_.goboom(946)
_st_.endofdoc()
