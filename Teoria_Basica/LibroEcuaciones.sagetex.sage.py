## -*- encoding: utf-8 -*-


# This file was *autogenerated* from the file LibroEcuaciones.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_281 = Integer(281); _sage_const_287 = Integer(287); _sage_const_288 = Integer(288); _sage_const_0 = Integer(0); _sage_const_290 = Integer(290); _sage_const_294 = Integer(294); _sage_const_296 = Integer(296); _sage_const_1 = Integer(1); _sage_const_301 = Integer(301); _sage_const_2 = Integer(2); _sage_const_5 = Integer(5); _sage_const_304 = Integer(304); _sage_const_306 = Integer(306); _sage_const_312 = Integer(312); _sage_const_314 = Integer(314); _sage_const_316 = Integer(316); _sage_const_319 = Integer(319); _sage_const_3 = Integer(3); _sage_const_p2 = RealNumber('.2'); _sage_const_321 = Integer(321); _sage_const_324 = Integer(324); _sage_const_329 = Integer(329); _sage_const_335 = Integer(335); _sage_const_337 = Integer(337); _sage_const_339 = Integer(339); _sage_const_343 = Integer(343); _sage_const_344 = Integer(344); _sage_const_4 = Integer(4); _sage_const_348 = Integer(348); _sage_const_351 = Integer(351); _sage_const_352 = Integer(352); _sage_const_354 = Integer(354); _sage_const_30 = Integer(30); _sage_const_100 = Integer(100); _sage_const_p5 = RealNumber('.5'); _sage_const_3p0 = RealNumber('3.0'); _sage_const_0p4 = RealNumber('0.4'); _sage_const_381 = Integer(381); _sage_const_383 = Integer(383); _sage_const_463 = Integer(463); _sage_const_467 = Integer(467); _sage_const_470 = Integer(470); _sage_const_6 = Integer(6); _sage_const_473 = Integer(473); _sage_const_475 = Integer(475); _sage_const_476 = Integer(476); _sage_const_7 = Integer(7); _sage_const_478 = Integer(478); _sage_const_480 = Integer(480); _sage_const_481 = Integer(481); _sage_const_8 = Integer(8); _sage_const_484 = Integer(484); _sage_const_490 = Integer(490); _sage_const_491 = Integer(491); _sage_const_9 = Integer(9); _sage_const_492 = Integer(492); _sage_const_496 = Integer(496); _sage_const_499 = Integer(499); _sage_const_10 = Integer(10); _sage_const_500 = Integer(500); _sage_const_11 = Integer(11); _sage_const_504 = Integer(504); _sage_const_516 = Integer(516); _sage_const_517 = Integer(517); _sage_const_12 = Integer(12); _sage_const_520 = Integer(520); _sage_const_522 = Integer(522); _sage_const_523 = Integer(523); _sage_const_13 = Integer(13); _sage_const_534 = Integer(534); _sage_const_537 = Integer(537); _sage_const_540 = Integer(540); _sage_const_545 = Integer(545); _sage_const_547 = Integer(547); _sage_const_549 = Integer(549); _sage_const_550 = Integer(550); _sage_const_14 = Integer(14); _sage_const_553 = Integer(553); _sage_const_556 = Integer(556); _sage_const_557 = Integer(557); _sage_const_15 = Integer(15); _sage_const_561 = Integer(561); _sage_const_563 = Integer(563); _sage_const_564 = Integer(564); _sage_const_16 = Integer(16); _sage_const_802 = Integer(802); _sage_const_819 = Integer(819); _sage_const_823 = Integer(823); _sage_const_17 = Integer(17); _sage_const_824 = Integer(824); _sage_const_18 = Integer(18); _sage_const_830 = Integer(830); _sage_const_833 = Integer(833); _sage_const_836 = Integer(836); _sage_const_19 = Integer(19); _sage_const_837 = Integer(837); _sage_const_20 = Integer(20); _sage_const_856 = Integer(856); _sage_const_863 = Integer(863)## This file (LibroEcuaciones.sagetex.sage) was *autogenerated* from LibroEcuaciones.tex with sagetex.sty version 2020/08/12 v3.5.
import sagetex
_st_ = sagetex.SageTeXProcessor('LibroEcuaciones', version='2020/08/12 v3.5', version_check=True)
_st_.current_tex_line = _sage_const_281 
_st_.blockbegin()
try:
 x,y=var('x,y')
 Eq1=y
 Eq2=-sin(x)
 Equilibrios=solve([Eq1,Eq2],[x,y])
 Equilibrios
except:
 _st_.goboom(_sage_const_287 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_288 
 _st_.inline(_sage_const_0 , latex(Equilibrios))
except:
 _st_.goboom(_sage_const_288 )
_st_.current_tex_line = _sage_const_290 
_st_.blockbegin()
try:
 __tmp__=var("x,y"); X = symbolic_expression([Eq1,Eq2]).function(x,y)
 A=X.diff()(_sage_const_0 ,_sage_const_0 )
 D=A.eigenmatrix_right()
except:
 _st_.goboom(_sage_const_294 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_296 
 _st_.inline(_sage_const_1 , latex(D))
except:
 _st_.goboom(_sage_const_296 )
_st_.current_tex_line = _sage_const_301 
_st_.blockbegin()
try:
 __tmp__=var("x,y"); Lambda = symbolic_expression(_sage_const_1 /_sage_const_2 *y**_sage_const_2 -cos(x)).function(x,y)
 p=plot3d(Lambda,(x,-_sage_const_5 ,_sage_const_5 ),(y,-_sage_const_1 ,_sage_const_1 ))
except:
 _st_.goboom(_sage_const_304 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_306 
 _st_.plot(_sage_const_0 , format='png', _p_=plot3d(Lambda,(x,-_sage_const_5 ,_sage_const_5 ),(y,-_sage_const_1 ,_sage_const_1 )))
except:
 _st_.goboom(_sage_const_306 )
_st_.current_tex_line = _sage_const_312 
_st_.blockbegin()
try:
 DLambdaX=Lambda.diff().dot_product(X)
except:
 _st_.goboom(_sage_const_314 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_316 
 _st_.inline(_sage_const_2 , latex(DLambdaX))
except:
 _st_.goboom(_sage_const_316 )
_st_.current_tex_line = _sage_const_319 
_st_.blockbegin()
try:
 p=contour_plot(Lambda,(x,-_sage_const_2 *pi,_sage_const_2 *pi),(y,-_sage_const_3 ,_sage_const_3 ),contours=srange(-_sage_const_1 ,_sage_const_5 ,_sage_const_p2 ),fill=False)
except:
 _st_.goboom(_sage_const_321 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_324 
 _st_.plot(_sage_const_1 , format='png', _p_=p)
except:
 _st_.goboom(_sage_const_324 )
_st_.current_tex_line = _sage_const_329 
_st_.blockbegin()
try:
 x,y,z=var('x,y,z')
 Eq1=y*(z-_sage_const_1 )
 Eq2=x*(z+_sage_const_1 )
 Eq3=-_sage_const_2 *x*y
 Equilibrios=solve([Eq1,Eq2,Eq3],[x,y,z])
except:
 _st_.goboom(_sage_const_335 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_337 
 _st_.inline(_sage_const_3 , latex(Equilibrios))
except:
 _st_.goboom(_sage_const_337 )
_st_.current_tex_line = _sage_const_339 
_st_.blockbegin()
try:
 __tmp__=var("x,y,z"); X = symbolic_expression([Eq1,Eq2,Eq3]).function(x,y,z)
 A=X.diff()(_sage_const_0 ,_sage_const_0 ,_sage_const_0 )
 D=A.eigenmatrix_right()
except:
 _st_.goboom(_sage_const_343 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_344 
 _st_.inline(_sage_const_4 , latex(D))
except:
 _st_.goboom(_sage_const_344 )
_st_.current_tex_line = _sage_const_348 
_st_.blockbegin()
try:
 __tmp__=var("x,y,z"); Lambda = symbolic_expression(_sage_const_1 /_sage_const_2 *(x**_sage_const_2 +y**_sage_const_2 +z**_sage_const_2 )).function(x,y,z)
 DX=Lambda.diff().dot_product(X).simplify_full()
except:
 _st_.goboom(_sage_const_351 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_352 
 _st_.inline(_sage_const_5 , latex(DX))
except:
 _st_.goboom(_sage_const_352 )
_st_.current_tex_line = _sage_const_354 
_st_.blockbegin()
try:
 def X(t,x):
     return [ x[_sage_const_1 ]*(x[_sage_const_2 ]-_sage_const_1 ),x[_sage_const_0 ]*(x[_sage_const_2 ]+_sage_const_1 ),-_sage_const_2 *x[_sage_const_0 ]*x[_sage_const_1 ]]
 
 T =  ode_solver()
 T.function=X
 T.algorithm="rk8pd"
 A=[]
 T.ode_solve(y_0=[_sage_const_1 ,_sage_const_1 ,_sage_const_1 ],t_span=[_sage_const_0 ,_sage_const_30 ], num_points=_sage_const_100 )
 a=T.solution
 Sol=[soln[_sage_const_1 ] for soln in a]
 Gra=list_plot(Sol,plotjoined=True,thickness=_sage_const_p5 ,rgbcolor=(_sage_const_1 ,_sage_const_0 ,_sage_const_0 ))
 theta,phi=var('theta,phi')
 Esfe=parametric_plot3d([sqrt(_sage_const_3p0 )*cos(theta)*sin(phi), sqrt(_sage_const_3p0 )*sin(theta)*sin(phi), sqrt(_sage_const_3p0 )*cos(phi)], (theta,_sage_const_0 ,_sage_const_2 *pi), (phi,_sage_const_0 ,pi),opacity=_sage_const_0p4 )
 Gra+=Esfe
 T.ode_solve(y_0=[_sage_const_1 ,_sage_const_0 ,sqrt(_sage_const_2 )],t_span=[_sage_const_0 ,_sage_const_30 ], num_points=_sage_const_100 )
 a=T.solution
 Sol=[soln[_sage_const_1 ] for soln in a]
 Gra+=list_plot(Sol,plotjoined=True,thickness=_sage_const_p5 ,rgbcolor=(_sage_const_1 ,_sage_const_0 ,_sage_const_0 ))
 T.ode_solve(y_0=[_sage_const_1 ,_sage_const_0 ,-sqrt(_sage_const_2 )],t_span=[_sage_const_0 ,_sage_const_30 ], num_points=_sage_const_100 )
 a=T.solution
 Sol=[soln[_sage_const_1 ] for soln in a]
 Gra+=list_plot(Sol,plotjoined=True,thickness=_sage_const_p5 ,rgbcolor=(_sage_const_1 ,_sage_const_0 ,_sage_const_0 ))
 T.ode_solve(y_0=[-_sage_const_1 ,_sage_const_0 ,-sqrt(_sage_const_2 )],t_span=[_sage_const_0 ,_sage_const_30 ], num_points=_sage_const_100 )
 a=T.solution
 Sol=[soln[_sage_const_1 ] for soln in a]
 Gra+=list_plot(Sol,plotjoined=True,thickness=_sage_const_p5 ,rgbcolor=(_sage_const_1 ,_sage_const_0 ,_sage_const_0 ))
except:
 _st_.goboom(_sage_const_381 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_383 
 _st_.plot(_sage_const_2 , format='png', _p_=Gra)
except:
 _st_.goboom(_sage_const_383 )
_st_.current_tex_line = _sage_const_463 
_st_.blockbegin()
try:
 x,y,z,t=var('x,y,z,t')
 __tmp__=var("x,y,z"); X = symbolic_expression((-y+x*z,x+y*z,-z*(x**_sage_const_2 +y**_sage_const_2 ))).function(x,y,z)
 DX=X.diff()(x,y,z)
except:
 _st_.goboom(_sage_const_467 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_470 
 _st_.inline(_sage_const_6 , latex(DX))
except:
 _st_.goboom(_sage_const_470 )
_st_.current_tex_line = _sage_const_473 
_st_.blockbegin()
try:
 A=(X.diff())(cos(t),sin(t),_sage_const_0 ).simplify_trig()
except:
 _st_.goboom(_sage_const_475 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_476 
 _st_.inline(_sage_const_7 , latex(A))
except:
 _st_.goboom(_sage_const_476 )
_st_.current_tex_line = _sage_const_478 
_st_.blockbegin()
try:
 Eq=A*vector([x,y,z]).column()
except:
 _st_.goboom(_sage_const_480 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_481 
 _st_.inline(_sage_const_8 , latex(Eq))
except:
 _st_.goboom(_sage_const_481 )
_st_.current_tex_line = _sage_const_484 
_st_.blockbegin()
try:
 t=var('t')
 x=function('x')
 y=function('y')
 z=function('z')
 z_sol=desolve( z(t).diff(t)==-z(t),z(t))
except:
 _st_.goboom(_sage_const_490 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_491 
 _st_.inline(_sage_const_9 , latex(z_sol))
except:
 _st_.goboom(_sage_const_491 )
_st_.current_tex_line = _sage_const_492 
_st_.blockbegin()
try:
 a,b,c=var('a,b,c')
 Sol=desolve_system([x(t).diff(t)==c*e**(-t)*cos(t)-y(t)     ,y(t).diff(t)==sin(t)*c*e**(-t)+x(t)],[x(t),y(t)],ivar=t,ics=[_sage_const_0 ,a,b])
except:
 _st_.goboom(_sage_const_496 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_499 
 _st_.inline(_sage_const_10 , latex(Sol[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_499 )
try:
 _st_.current_tex_line = _sage_const_500 
 _st_.inline(_sage_const_11 , latex(Sol[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_500 )
_st_.current_tex_line = _sage_const_504 
_st_.blockbegin()
try:
 c1=Sol[_sage_const_0 ].rhs()
 c2=Sol[_sage_const_1 ].rhs()
 c3=c*exp(-t)
 e1={a:_sage_const_1 ,b:_sage_const_0 ,c:_sage_const_0 }
 e2={a:_sage_const_0 ,b:_sage_const_1 ,c:_sage_const_0 }
 e3={a:_sage_const_0 ,b:_sage_const_0 ,c:_sage_const_1 }
 G=matrix([ [c1.substitute(e1),c1.substitute(e2),c1.substitute(e3)] ,[c2.substitute(e1),c2.substitute(e2),c2.substitute(e3)] ,[c3.substitute(e1),c3.substitute(e2),c3.substitute(e3)]])
 
except:
 _st_.goboom(_sage_const_516 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_517 
 _st_.inline(_sage_const_12 , latex(G))
except:
 _st_.goboom(_sage_const_517 )
_st_.current_tex_line = _sage_const_520 
_st_.blockbegin()
try:
 D=G.subs(t=_sage_const_2 *pi).eigenmatrix_right()
except:
 _st_.goboom(_sage_const_522 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_523 
 _st_.inline(_sage_const_13 , latex(D))
except:
 _st_.goboom(_sage_const_523 )
_st_.current_tex_line = _sage_const_534 
_st_.blockbegin()
try:
 x,y,t,b=var('x,y,t,b')
 __tmp__=var("x,y"); X = symbolic_expression((-x-b*y+x**_sage_const_3 +x*y**_sage_const_2 ,b*x-y+x**_sage_const_2 *y+y**_sage_const_3 )).function(x,y)
except:
 _st_.goboom(_sage_const_537 )
_st_.blockend()
_st_.current_tex_line = _sage_const_540 
_st_.blockbegin()
try:
 ((X(cos(b*t),sin(b*t)))[_sage_const_0 ]-(cos(b*t)).diff(t)) .simplify_full()
 ((X(cos(b*t),sin(b*t)))[_sage_const_1 ]-(sin(b*t)).diff(t)) .simplify_full()
except:
 _st_.goboom(_sage_const_545 )
_st_.blockend()
_st_.current_tex_line = _sage_const_547 
_st_.blockbegin()
try:
 __tmp__=var("t"); A = symbolic_expression((X.diff())(cos(b*t),sin(b*t)).simplify_trig()).function(t)
except:
 _st_.goboom(_sage_const_549 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_550 
 _st_.inline(_sage_const_14 , latex(A(t)))
except:
 _st_.goboom(_sage_const_550 )
_st_.current_tex_line = _sage_const_553 
_st_.blockbegin()
try:
  G=matrix([[e**(_sage_const_2 *t)*cos(b*t)  , -sin(b*t) ]  ,[e**(_sage_const_2 *t)*sin(b*t)  , cos(b*t) ]])
  
except:
 _st_.goboom(_sage_const_556 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_557 
 _st_.inline(_sage_const_15 , latex(G))
except:
 _st_.goboom(_sage_const_557 )
_st_.current_tex_line = _sage_const_561 
_st_.blockbegin()
try:
 D=G.subs(t==_sage_const_2 *pi/b).eigenmatrix_right()
  
except:
 _st_.goboom(_sage_const_563 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_564 
 _st_.inline(_sage_const_16 , latex(D))
except:
 _st_.goboom(_sage_const_564 )
_st_.current_tex_line = _sage_const_802 
_st_.blockbegin()
try:
 t,b=var('t,b')
 theta=function('theta')(t)
 r=function('r')(t)
 x=r*cos(theta)
 y=r*sin(theta)
 Eq1=x.diff(t)==-x-b*y+x**_sage_const_3 +x*y**_sage_const_2 
 Eq2=y.diff(t)==b*x-y+x**_sage_const_2 *y+y**_sage_const_3 
 X,Y=var('X,Y')
 Eq1s=Eq1.substitute(theta.diff(t)==X,r.diff(t)==Y)
 Eq2s=Eq2.substitute(theta.diff(t)==X,r.diff(t)==Y)
 Eqpol=solve([Eq1s,Eq2s],[X,Y])
 Eq1Pol=Eqpol[_sage_const_0 ][_sage_const_0 ].simplify_full() .substitute(X==theta.diff(t))
 Eq2Pol=Eqpol[_sage_const_0 ][_sage_const_1 ].simplify_full() .substitute(Y==r.diff(t))
 
except:
 _st_.goboom(_sage_const_819 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_823 
 _st_.inline(_sage_const_17 , latex(Eq1Pol))
except:
 _st_.goboom(_sage_const_823 )
try:
 _st_.current_tex_line = _sage_const_824 
 _st_.inline(_sage_const_18 , latex(Eq2Pol))
except:
 _st_.goboom(_sage_const_824 )
_st_.current_tex_line = _sage_const_830 
_st_.blockbegin()
try:
 Sol1=desolve(Eq1Pol,theta,ivar=t)
 Sol2=desolve(Eq2Pol,r,ivar=t)
except:
 _st_.goboom(_sage_const_833 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_836 
 _st_.inline(_sage_const_19 , latex(Sol1))
except:
 _st_.goboom(_sage_const_836 )
try:
 _st_.current_tex_line = _sage_const_837 
 _st_.inline(_sage_const_20 , latex(Sol2))
except:
 _st_.goboom(_sage_const_837 )
_st_.current_tex_line = _sage_const_856 
_st_.blockbegin()
try:
 from sympy import *
 k,c,b,t,x0,y0=symbols('k,c,b,t,x0,y0')
 theta=b*t+c
 r= sqrt(-_sage_const_1 /(k*e**( _sage_const_2 *t) - _sage_const_1 ))
 SolInin=solve([r.subs(t,_sage_const_0 )*cos(theta.subs(t,_sage_const_0 ))-x0 ,r.subs(t,_sage_const_0 )*sin(theta.subs(t,_sage_const_0 ))-y0],[k,c])
except:
 _st_.goboom(_sage_const_863 )
_st_.blockend()
_st_.endofdoc()

